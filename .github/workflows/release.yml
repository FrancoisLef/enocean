name: 📦 Release

on:
  push:
    branches: [main]

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        node_version: [lts/-1, lts/*, latest]
      fail-fast: false
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm
      - name: 📦 Install dependencies
        run: npm install
      - name: 🧪 Run tests
        run: npm run test
      - name: 🔍 Run linting
        run: npm run lint

  build:
    name: 🏗️ Build source & binaries
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: 📦 Install dependencies
        run: npm install
      - name: 🔮 Get next release version
        run: npm run release:version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: 🆙 Update version in package.json
        run: |
          VERSION=$(cat .VERSION)
          jq --arg version "$VERSION" '.version = $version' package.json > tmp.json && mv tmp.json package.json
      - name: 🏗️ Build source & binaries
        run: npm run build
      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            binaries/

  release:
    name: 🏷️ Release
    runs-on: ubuntu-latest
    needs: [test, build]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
      - name: 📦 Install dependencies
        run: npm ci
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .
      - name: 🏷️ Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
